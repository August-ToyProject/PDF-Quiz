name: Slack Notification on PR and Merge
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened]
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          EVENT_DATA=$(jq '.' <<< '${{ toJson(github.event) }}')
          
          if [[ "${{ github.event_name }}" == "push" ]]; then
            COMMIT_COUNT=$(echo "$EVENT_DATA" | jq '.commits | length')
            if [[ "${{ github.event.head_commit.message }}" == *"Merge pull request"* ]]; then
              TITLE=":rotating_light: PR이 메인 브랜치에 머지되었습니다!"
              FIELDS=$(jq -n \
                --arg repo "${{ github.repository }}" \
                --arg actor "${{ github.actor }}" \
                --arg compare "${{ github.event.compare }}" \
                '[
                  {"type": "mrkdwn", "text": "*레포지토리:*\n$repo"},
                  {"type": "mrkdwn", "text": "*머지한 사람:*\n$actor"},
                  {"type": "mrkdwn", "text": "*<$compare|변경 내용 보기>*"}
                ]')
              FOOTER="모두 최신 상태를 유지하기 위해 메인 브랜치를 풀 하세요! :arrow_down:"
            else
              TITLE=":rocket: 새로운 커밋이 메인 브랜치에 푸시되었습니다!"
              FIELDS=$(jq -n \
                --arg repo "${{ github.repository }}" \
                --arg actor "${{ github.actor }}" \
                --arg count "$COMMIT_COUNT" \
                --arg message "${{ github.event.head_commit.message }}" \
                --arg commit_url "${{ github.event.head_commit.url }}" \
                --arg compare "${{ github.event.compare }}" \
                '[
                  {"type": "mrkdwn", "text": "*레포지토리:*\n$repo"},
                  {"type": "mrkdwn", "text": "*작성자:*\n$actor"},
                  {"type": "mrkdwn", "text": "*커밋 수:*\n$count"},
                  {"type": "mrkdwn", "text": "*커밋 메시지:*\n$message"},
                  {"type": "mrkdwn", "text": "*<$commit_url|커밋 보기>*"},
                  {"type": "mrkdwn", "text": "*<$compare|변경 내용 보기>*"}
                ]')
              FOOTER=""
            fi
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TITLE=":sparkles: 풀 리퀘스트가 ${{ github.event.pull_request.state }} 되었습니다!"
            FIELDS=$(jq -n \
              --arg title "${{ github.event.pull_request.title }}" \
              --arg user "${{ github.event.pull_request.user.login }}" \
              --arg repo "${{ github.repository }}" \
              --arg url "${{ github.event.pull_request.html_url }}" \
              '[
                {"type": "mrkdwn", "text": "*제목:*\n$title"},
                {"type": "mrkdwn", "text": "*작성자:*\n$user"},
                {"type": "mrkdwn", "text": "*레포지토리:*\n$repo"},
                {"type": "mrkdwn", "text": "*<$url|PR 보기>*"}
              ]')
            FOOTER=""
          else
            TITLE=":warning: 알 수 없는 이벤트가 감지되었습니다: ${{ github.event_name }}"
            FIELDS="[]"
            FOOTER=""
          fi

          PAYLOAD=$(jq -n \
            --arg title "$TITLE" \
            --argjson fields "$FIELDS" \
            --arg footer "$FOOTER" \
            '{
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": $title,
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": $fields
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": $footer
                    }
                  ]
                }
              ]
            }')

          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
